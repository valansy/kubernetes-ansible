---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dummy-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-deployment
spec:
  selector:
    matchLabels:
      app: dummy-deployment
  replicas: 3
  template:
    metadata:
      labels:
        app: dummy-deployment
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: dummy-pvc
          mountPath: /mnt
      dnsConfig:
        options:
        - name: ndots
          value: "0"
      volumes:
      - name: dummy-pvc
        persistentVolumeClaim:
          claimName: dummy-claim
---
apiVersion: v1
kind: Service
metadata:
  name: dummy-svc
spec:
  type: ClusterIP
  selector:
    app: dummy-deployment
  ports:
  - port: 80
    name: http
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: dummy-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx" 
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: "nginx.btech.local"
    http:
      paths:
      - path: /
        backend:
          serviceName: dummy-svc
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-client
spec:
  selector:
    matchLabels:
      app: dummy-client
  replicas: 1
  template:
    metadata:
      labels:
        app: dummy-client
    spec:
      containers:
      - name: dummy-client
        image: anaisareya/ubuntucurl
        command: ["/bin/sh", "-c"]
        args:
        - |
          while true; do
            curl -s -w "%{http_code} : $(date +'%H:%M:%S.%3N %Z')\n" -o /dev/null http://dummy-svc.default.svc.cluster.local;
            sleep 1;
          done
      dnsConfig:
        options:
        - name: ndots
          value: "0"
